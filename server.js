const WebSocket = require('ws'); // ะะผะฟะพััััะผะพ ะฑัะฑะปัะพัะตะบั WebSocket
const path = require('path'); // ะะพะดัะปั ะดะปั ัะพะฑะพัะธ ะท ัะปััะฐะผะธ ะดะพ ัะฐะนะปัะฒ
const express = require('express'); // Express โ ะฒะตะฑ-ััะตะนะผะฒะพัะบ
const http = require('http'); // ะะพะดัะปั HTTP ะดะปั ััะฒะพัะตะฝะฝั ัะตัะฒะตัะฐ
const timesyncServer = require('timesync/server'); // ะัะดะบะปััะตะฝะฝั ัะตัะฒะตัะฝะพั ัะฐััะธะฝะธ timesync

const app = express();
const server = http.createServer(app); // ะกัะฒะพัะตะฝะฝั HTTP-ัะตัะฒะตัะฐ ะฝะฐ ะฑะฐะทั Express
const wss = new WebSocket.Server({ server }); // ะกัะฒะพัะตะฝะฝั WebSocket-ัะตัะฒะตัะฐ

const PORT = process.env.PORT || 3000; // ะะพัั, ะฝะฐ ัะบะพะผั ะฟัะฐััะฒะฐัะธะผะต ัะตัะฒะตั

// ะะฑัะปัะณะพะฒัะฒะฐะฝะฝั ััะฐัะธัะฝะธั ัะฐะนะปัะฒ ะท ะฟะฐะฟะบะธ "public"
app.use(express.static(path.join(__dirname, 'public')));

// ะะฑัะพะฑะบะฐ ะทะฐะฟะธััะฒ ะฑัะฑะปัะพัะตะบะธ timesync
app.use('/timesync', timesyncServer.requestHandler);

// ะะฑัะพะฑะฝะธะบ WebSocket-ะท'ัะดะฝะฐะฝั
wss.on('connection', (ws) => {
    console.log('๐ ะััะฐะฝะพะฒะปะตะฝะพ ะฝะพะฒะต WebSocket-ะทโัะดะฝะฐะฝะฝั');
    
    // ะะพะดัั: ะพััะธะผะฐะฝะพ ะฟะพะฒัะดะพะผะปะตะฝะฝั ะฒัะด ะบะปััะฝัะฐ
    ws.on('message', (message) => {
        console.log(`๐ฉ ะััะธะผะฐะฝะพ ะฟะพะฒัะดะพะผะปะตะฝะฝั: ${message}`);
        
        let data;
        try {
            data = JSON.parse(message); // ะกะฟัะพะฑะฐ ัะพะทะฟะฐััะธัะธ ะฟะพะฒัะดะพะผะปะตะฝะฝั ัะบ JSON
        } catch (e) {
            console.error('โ ะะพะผะธะปะบะฐ ะฟะฐััะธะฝะณั JSON', e);
            return;
        }

        // ะฏะบัะพ ะบะปััะฝั ะทะฐะฟะธััั ัะฐั
        if (data.type === 'getTime') {
            ws.send(JSON.stringify({
                type: 'time',
                result: Date.now(), // ะะพัะพัะฝะธะน ัะฐั ะฝะฐ ัะตัะฒะตัั
                id: Date.now() // ะะดะตะฝัะธััะบะฐัะพั (ะผะพะถะฝะฐ ะฒะธะบะพัะธััะฐัะธ ะดะปั ะฒัะดััะตะถะตะฝะฝั)
            }));
        }
    });

    // ะะพะดัั: ะบะปััะฝั ะทะฐะบัะธะฒ ะทโัะดะฝะฐะฝะฝั
    ws.on('close', () => {
        console.log('โ ะโัะดะฝะฐะฝะฝั ะทะฐะบัะธัะพ ะบะปััะฝัะพะผ');
    });
});

// ะะฐะฟััะบ ัะตัะฒะตัะฐ
server.listen(PORT, () => {
    console.log(`๐ WebSocket-ัะตัะฒะตั ะทะฐะฟััะตะฝะพ ะฝะฐ http://localhost:${PORT}`);
});